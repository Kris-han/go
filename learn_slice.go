package main

import "fmt"

func main(){


	//切片是对连续数组的一个应用 是一个引用类型
	//切片有3个部分组成
	//1、pointer是指向一个数组的指针
	//2、len代表当前切片的长度
	//3、cap代表当前切片的容量 cap总是大于等于len
	//操作格式：
	//slice[开始位置：结束位置]
	//切片声明格式如下：
	//var name[] type
	//用make声明并且初始化：make([] type size cap)
	//
	//var a = [3] int{1,2,3}
	//fmt.Println(a, a[1 : 2])

	//切片特征如下：
	//1、取出的元素数量为开始位置-结束位置
	//2、取出元素不包含结束位置对应的索引，切片最后一个元素使用slice[len(slice)]获取
	//3、如果缺省开始位置，则表示从连续区域的开头到结束位置
	//4、如果缺省结束位置，则表示从连续区域的开始位置到结尾
	//5、如果两者同时缺省，则新生成的切片与原切片等效
	//6、如果两者同时为0，则等效于空切片，一般用于切片复位


	//var a  [20] int
	//fmt.Println(a)
	//数组声明方式：
	//var name [个数] 类型
	//切片声明方式:
	//var name[] 类型
	//make([] type size cap)



}
